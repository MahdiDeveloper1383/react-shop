{"version":3,"file":"static/js/702.2aa21f5f.chunk.js","mappings":"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","sources":["Hooks/UseProduct.ts","Components/Admin/ProductCard.tsx","Components/Admin/Products.tsx"],"sourcesContent":["import { useMutation, useQueryClient } from \"@tanstack/react-query\"\r\nimport axios from \"axios\"\r\nimport { IBook } from \"../Interfaces/Books\"\r\n\r\nexport const UseProduct =()=>{\r\n    const queryClient = useQueryClient()\r\n\r\n     // ======== Delete Product ========\r\n    const deleteProduct = useMutation({\r\n        mutationFn:(ProductId:string)=>axios.delete(`https://687a0739abb83744b7eb0c77.mockapi.io/Books/${ProductId}`),\r\n        onSuccess: () => queryClient.invalidateQueries({queryKey:['Books']}),\r\n        onError: (err) => console.error(\"Delete product failed:\", err)\r\n    })\r\n\r\n    // ======== Edit Product ========\r\n    const editProduct = useMutation({\r\n        mutationFn:({ ProductId, ProductData }: { ProductId: string; ProductData: Partial<IBook> })=>axios.put(`https://687a0739abb83744b7eb0c77.mockapi.io/Books/${ProductId}`,ProductData),\r\n        onSuccess: () => queryClient.invalidateQueries({queryKey:['Books']}),\r\n        onError: (err) => console.error(\"Edit product failed:\", err)\r\n    })\r\n    return{\r\n        deleteProduct,\r\n        editProduct\r\n    }\r\n}","import { UseProduct } from \"../../Hooks/UseProduct\";\r\nimport { IBook } from \"../../Interfaces/Books\";\r\n\r\nconst Product_Card = ({Product,onEdit}:{Product:IBook,onEdit:()=>void}) => {\r\n    const {deleteProduct} = UseProduct()\r\n    return ( \r\n        <tr>\r\n                <td className=\"border px-4 py-2\">{Product.id}</td>\r\n                <td className=\"border px-4 py-2\">{Product.name}</td>\r\n                <td className=\"border px-4 py-2\">${Product.price}</td>\r\n                <td className=\"border px-4 py-2\">\r\n                  <img\r\n                    src={Product.cover}\r\n                    alt=\"Product\"\r\n                    className=\"w-24 h-32 object-cover rounded-lg shadow-md\"\r\n                  />\r\n                </td>\r\n                <td className=\"border px-2 py-1\">\r\n                  <div className=\"flex flex-row gap-6 ml-auto mr-auto items-center justify-center\">\r\n                    <button \r\n                    onClick={onEdit}\r\n                    className=\"border w-24 h-10 rounded-xl bg-blue-500 text-white hover:bg-blue-600\">\r\n                      Edit\r\n                    </button>\r\n                    <button \r\n                    onClick={()=>deleteProduct.mutate(Product.id)}\r\n                    className=\"border w-24 h-10 rounded-xl bg-red-500 text-white hover:bg-red-600\">\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n     );\r\n}\r\n \r\nexport default Product_Card;","import { lazy, Suspense, useState } from \"react\";\r\nimport GetProduct from \"../../Hooks/GetProducts\";\r\nimport Product_Card from \"./ProductCard\";\r\nimport { IBook } from \"../../Interfaces/Books\";\r\n\r\nconst EditProdcut = lazy(()=>import('./EditProduct'))\r\nconst Add_Product = lazy(()=>import('./Add_Product'))\r\nconst Products_dashboard = () => {\r\n    const {data:Products = []} = GetProduct()\r\n     const [filterbook, setbookfilter] = useState<string>(\"\");\r\n      const filteredUsers = Products.filter((product) =>\r\n        product.name.toLocaleLowerCase().includes(filterbook.toLocaleLowerCase())\r\n      );\r\n      const [CurrentPage, serCurrentPage] = useState(1);\r\n      const [editingProduct,setEditingProduct] = useState<IBook|null>(null)\r\n      const [AddProduct,setAddproduct] = useState<boolean>(false)\r\n      const ItemPerPage = 3;\r\n      const indexofLastUser = ItemPerPage * CurrentPage;\r\n      const indexofFirstUser = indexofLastUser - ItemPerPage;\r\n      const CurrentBooks = filteredUsers.slice(indexofFirstUser, indexofLastUser);\r\n    return ( \r\n         <div className=\"w-full h-screen flex flex-col border rounded-xl\">\r\n           {editingProduct && !AddProduct && (\r\n                  <Suspense\r\n                    fallback={<div className=\"text-center p-10\">Loading editor...</div>}\r\n                  >\r\n                    <EditProdcut onCancel={() => setEditingProduct(null)} Product={editingProduct} />\r\n                  </Suspense>\r\n            )}\r\n            {\r\n              AddProduct && !editingProduct && (\r\n                <Suspense fallback={<div className=\"text-center p-10\">Loading editor...</div>}>\r\n                  <Add_Product onCancel = {() => setAddproduct(false)}/>\r\n                </Suspense>\r\n              )\r\n            }\r\n          {!editingProduct && !AddProduct &&(\r\n              <>\r\n              <div className=\"w-full min-h-24 bg-blue-500 rounded-xl flex flex-row items-center p-3 justify-between\">\r\n            <h4 className=\"text-4xl font-bold text-gray-600\">Products</h4>\r\n            <div className=\"flex flex-row items-center gap-4\">\r\n              <button \r\n              onClick={()=>setAddproduct(true)}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow-md transition\">\r\n                Add Product\r\n              </button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"rounded-xl flex-1 p-2\"\r\n                placeholder=\"Search Product...\"\r\n                onChange={(e)=>setbookfilter(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <table className=\"mt-10 border-2 min-w-[1100px] border-collapse mr-auto ml-auto\">\r\n            <thead>\r\n              <th className=\"border px-4 py-2\">ID</th>\r\n              <th className=\"border px-4 py-2\">Name</th>\r\n              <th className=\"border px-4 py-2\">Price</th>\r\n              <th className=\"border px-4 py-2\">Image</th>\r\n              <th className=\"border px-4 py-2\">Actions</th>\r\n            </thead>\r\n            <tbody>\r\n                {CurrentBooks.map((product)=>(\r\n                  <Product_Card \r\n                  onEdit={()=>setEditingProduct(product)}\r\n                  key={product.id} \r\n                  Product={product}/>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"flex justify-center gap-2 mt-4\">\r\n            {Array.from(\r\n              { length: Math.ceil(Products.length / ItemPerPage) },\r\n              (_, i) => (\r\n                <button\r\n                key={i}\r\n                onClick={() => serCurrentPage(i + 1)}\r\n                className={`px-3 py-1 rounded ${\r\n                  CurrentPage === i + 1\r\n                  ? \"bg-blue-500 text-white\"\r\n                  : \"bg-gray-200\"\r\n                  }`}\r\n                  >\r\n                  {i + 1}\r\n                </button>\r\n              )\r\n            )}\r\n          </div>\r\n            </>\r\n            ) }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Products_dashboard;"],"names":["UseProduct","queryClient","useQueryClient","deleteProduct","useMutation","mutationFn","ProductId","axios","delete","concat","onSuccess","invalidateQueries","queryKey","onError","err","console","error","editProduct","_ref","ProductData","put","Product","onEdit","_jsxs","children","_jsx","className","id","name","price","src","cover","alt","onClick","mutate","EditProdcut","lazy","Add_Product","Products_dashboard","data","Products","GetProduct","filterbook","setbookfilter","useState","filteredUsers","filter","product","toLocaleLowerCase","includes","CurrentPage","serCurrentPage","editingProduct","setEditingProduct","AddProduct","setAddproduct","indexofLastUser","indexofFirstUser","CurrentBooks","slice","Suspense","fallback","onCancel","_Fragment","type","placeholder","onChange","e","target","value","map","Product_Card","Array","from","length","Math","ceil","_","i"],"sourceRoot":""}